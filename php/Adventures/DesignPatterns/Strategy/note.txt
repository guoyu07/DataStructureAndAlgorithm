The Strategy Pattern:

That's the behavior should be decided in runtime
    - This is why we have interfaces of behavior
    - Once a new idea of behavior appear, we write a new class for it, which should implements the behavior interface

The abstract class should have methods which call the method in those behaviors

Either the behavior can be set in construtor or setter method of Abstract class

Once we want to add more features instead of defaut method in abstract class, firstly call parent method and write more.